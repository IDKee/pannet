package com.pan.sys.controller;import com.pan.sys.entity.User;import lombok.extern.slf4j.Slf4j;import org.apache.shiro.SecurityUtils;import org.apache.shiro.authc.IncorrectCredentialsException;import org.apache.shiro.authc.UnknownAccountException;import org.apache.shiro.authc.UsernamePasswordToken;import org.apache.shiro.crypto.hash.Md5Hash;import org.apache.shiro.subject.Subject;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;import java.util.UUID;@Controller@Slf4jpublic class LoginController {    @Resource    private HttpServletRequest request;    @GetMapping("login")    public String login(){        return "login";    }    @PostMapping("login")    public String login(User user, HttpSession session){        // 封装成请求对象        UsernamePasswordToken token = new UsernamePasswordToken(user.getUsername(), user.getPassword());        // 获取登录的主体对象        Subject subject = SecurityUtils.getSubject();        // 登录        try {            subject.login(token);        } catch (UnknownAccountException e) {            String err = "用户名不存在";            log.error(err);            session.setAttribute("userNameError", err);            return "login";        } catch (IncorrectCredentialsException e) {            String err = "密码输入错误";            log.error(err);            session.setAttribute("passwordError", err);            return "login";        } catch (Exception e) {            String err = "未知错误，登录失败";            log.error(err);            session.setAttribute("otherError", err);            return "login";        }        // 获取用户信息，在首页显示用户信息        // 这个方法返回的数据 实际上就是 realm中认证的SimpleAuthenticationInfo的第一个参数的数据        User userInfo= (User) SecurityUtils.getSubject().getPrincipal();        session.setAttribute("user", userInfo);        return "index";    }    public static void main(String[] args) {        UUID uuid = UUID.randomUUID();        Md5Hash md5Hash = new Md5Hash("123456", uuid.toString());        System.out.println(md5Hash.toString());        String s = "e10adc3949ba59abbe56e057f20f883e";    }}